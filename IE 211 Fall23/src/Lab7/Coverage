class Coverage:

     def __isUnderCoverage(self, f):
         return any(x > 0 for x in f)

     def ImplementAlgorithm(self, f, sets, p):
         setCollection = [0]*len(sets)
         totalPrice = 0

         while self.__isUnderCoverage(f):
             best_i = -1
             best_ratio = -1

             for i in range(len(sets)):
                 if setCollection[i] == 0:
                     totalUndercoverage = sum(f[j-1] for j in sets[i])

                     ratio = totalUndercoverage / p[i]

                     if ratio > best_ratio:
                         best_ratio = ratio
                         best_i = i

             if best_i == -1:
                 break
             else:
                 setCollection[best_i] = 1
                 totalPrice += p[best_i]

                 for j in sets[best_i]:
                     if f[j-1] > 0:
                         f[j-1] -= 1


         print("\nThe subset selection is ", *setCollection)
         print("\nThe total price is ", totalPrice)

         print("\nThe undercoverage is ",*f)
